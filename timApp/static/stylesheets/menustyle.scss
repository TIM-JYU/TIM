$grid-gutter-per2: ($grid-gutter-width/2);
$left-ratio: 100% * ($left-side-columns/$grid-columns);
$left-ratio-lg: 100% * ($left-side-columns-lg/$grid-columns);
$right-ratio: 100% * ($right-side-columns/$grid-columns);

$menuTab-border: 1px solid lighten($gray-base, 88%);

.flex-grow-1 {
    flex-grow: 1;
}

.fixed-side {
    position: fixed;
    z-index: 4;
    font-size: small;
}

.left-fixed-side {
    @extend .fixed-side;
    max-width: calc(#{$left-ratio} - #{$grid-gutter-per2});
    min-width: 0;
    margin-left: -$grid-gutter-per2;
    z-index: 10;

    @media (max-width: $screen-md-max) {
        max-width: calc(#{$left-ratio-lg} - #{$grid-gutter-per2});
    }

    @media (max-width: $screen-xs-max) {
        margin-left: -$container-xs-padding;
    }

    &.show {
        min-width: 20em;
        @media (min-width: $screen-md-min) {
            min-width: 18em;
        }
    }
}

.right-fixed-side {
    @extend .fixed-side;
    right: 0;
    z-index: 100;
}

#menuTabs {
    background: white;
    display: none;

    & .btn {
        white-space: normal;
    }

    & > .nav > li > a {
        padding: 5px 11px;
    }

    & > .nav-tabs {
        .nav-link, .nav-item {
            height: 44px;
        }

        min-width: 185px; // minimum required space for 5 tabs in one row
        .glyphicon {
            font-size: x-large;
            margin: 0px -10px;
            color: $basic-color;
        }

        // make sure active tab remains black
        .active a .glyphicon {
            color: inherit;
        }
    }

    .tab-content {
        overflow-x: hidden;
        overflow-y: auto;
        max-height: calc(100vh - 51.2833px);
        padding-left: 3px;

        .same-line {
            display: inline-block;

            &.spaced {
                padding-left: 0.3em;
            }
        }

        i.vis-hidden {
            visibility: hidden;
        }

        .tab-pane > ul {
            padding-left: 13px;

            &.subexp {
                padding-left: 0;
                list-style-type: none;

                ul {
                    padding-left: 25px;
                }

                a.exptoggle:hover {
                    text-decoration: none;
                }

                a.a3 {
                    position: relative;
                    left: 0.4em;
                    font-size: smaller;
                    display: block; // needed for line-height to work
                    line-height: 1.3;
                }
            }
        }
    }
}

// TODO: Figure out a way to get theme variables into Angular easily. Potential solution is to use CSS variables.
.points-list {
    border-bottom: $menuTab-border;

    .collapse-header * {
        color: $text-color;
    }

    .points-header > p {
        color: lighten($text-color, 40%);
    }

    .score-list {
        border-top: $menuTab-border;

        li {
            a {
                color: $score-menu-link-color;

                &:hover,
                &:focus {
                    color: $basic-color;
                }

                &:visited {
                    color: $score-menu-link-visited-color;
                }
            }

            &:last-child {
                border-top: $menuTab-border;
            }
        }
    }

    .full-points {
        color: lighten($text-color, 40%);
    }
}
