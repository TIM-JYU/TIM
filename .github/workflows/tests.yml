name: Run tests

on: [push, pull_request]

jobs:
  skip_check:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
        - id: skip_check
          uses: fkirc/skip-duplicate-actions@v5
          with:
              concurrent_skipping: 'same_content_newer'
              skip_after_successful_duplicate: 'true'

  ci_tests:
    name: CI tests (${{ matrix.test_module }})
    runs-on: ubuntu-latest

    needs: skip_check
    if: needs.skip_check.outputs.should_skip != 'true'

    strategy:
      matrix:
        test_module:
          - browser
          - unit
          - db
          - server
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Cache Angular build assets
        uses: actions/cache@v3
        if: "${{ matrix.test_module == 'browser' }}"
        with:
          path: timApp/.angular/cache
          key: ${{ runner.os }}-angular-cache-${{ hashFiles('**/*.ts') }}
          restore-keys: |
            ${{ runner.os }}-angular-cache-
      - name: Cache node modules
        uses: actions/cache@v3
        if: "${{ matrix.test_module == 'browser' || matrix.test_module == 'server'  }}"
        with:
          path: |
            timApp/node_modules
            timApp/modules/jsrunner/server/node_modules
          key: ${{ runner.os }}-ci-test-npm-${{ hashFiles('**/package-lock.json') }}
      - name: Cache Rust crates
        uses: actions/cache@v3
        with:
          path: |
            tim_rust/target
          key: ${{ runner.os }}-tim-rust-cache-${{ hashFiles('tim_rust/Cargo.lock') }}
      - name: Log info
        run: |
          uname -a
          docker info
          docker-compose --version
      - name: Set up
        run: ./tim setup --no-interactive --no-install --profile test
      - name: Download images
        run: ./tim dc pull --quiet
      - name: Install dependencies
        if: "${{ matrix.test_module == 'browser' || matrix.test_module == 'server'  }}"
        run: ./tim npmi
      - name: Compile JS
        if: "${{ matrix.test_module == 'browser' || matrix.test_module == 'server'  }}"
        run: ./tim js --target ${{ matrix.test_module }}
      - name: Install TIM Rust library
        run: ./tim rust
      - name: Run tests
        run: ./tim test --dc-up ${{ matrix.test_module }}
        timeout-minutes: 40
        env:
          SKIP_JSRUNNER_START: ${{ matrix.test_module == 'unit' || matrix.test_module == 'db' }}
      - name: Upload screenshots
        if: "${{ matrix.test_module == 'browser' && always() }}"
        uses: actions/upload-artifact@v3.0.0
        with:
          name: Browser Screenshots
          path: screenshots